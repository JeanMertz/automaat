[config.modify_core_tasks]
private = true
namespace = "default"

[env]
LATEST_SERVER_TAG = { script = ["git -c 'versionsort.suffix=-' tag --list --sort=-v:refname 'automaat-server-*' | awk -F- '{print $NF}'"] }
LATEST_CLIENT_TAG = { script = ["git -c 'versionsort.suffix=-' tag --list --sort=-v:refname 'automaat-web-client-*' | awk -F- '{print $NF}'"] }
CONTAINER_RELEASE_IMG = "blendle/automaat:server-v${LATEST_SERVER_TAG}_web-client-v${LATEST_CLIENT_TAG}"
CONTAINER_DEVELOP_IMG = "blendle/automaat:latest"

[tasks.test]
description = "Run all tests."
category = "Test"
workspace = false
dependencies = [
  "test::prettier-1",
  "test::prettier-2",
  "test::fmt",
  "test::build",
  "test::clippy",
  "test::unit",
  "test::doc",
]

[tasks."test::prettier-1"]
private = true
workspace = false
command = "prettier"
args = ["--check", "*.{graphql,toml,yml,yaml,md}", "!Makefile.toml"]

[tasks."test::prettier-2"]
private = true
workspace = false
command = "prettier"
args = ["--check", "./!(target)/**/*.{graphql,toml,yml,yaml,md}"]

[tasks."test::fmt"]
private = true
workspace = false
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks."test::build"]
private = true
workspace = false
command = "cargo"
args = ["build", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::clippy"]
private = true
workspace = false
command = "cargo"
args = ["clippy", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::unit"]
private = true
workspace = false
command = "cargo"
args = ["test", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::doc"]
private = true
workspace = false
command = "cargo"
args = ["doc", "--all", "--bins", "--all-features", "--no-deps", "--document-private-items"]

[tasks.wasm-release]
description = "Build WebAssembly files in release mode for the web-client crate."
category = "Build"
workspace = false
command = "wasm-pack"
args = [
  "build",
  "--release",
  "--target", "web",
  "--out-dir", "static/app",
  "--out-name", "automaat",
  "src/web-client",
  "--",
  "--no-default-features",
]

[tasks.wasm-opt]
description = "Optimize WebAssembly file for release."
category = "Build"
workspace = false
command = "wasm-opt"
args = [
  "-Oz",
  "--output", "src/web-client/static/app/automaat_bg.wasm",
  "src/web-client/static/app/automaat_bg.wasm",
]

[tasks.build-container]
description = "Build a development Docker container, including the server and web-client dependencies."
category = "Build"
workspace = false
dependencies = [
  "wasm-release",
  "wasm-opt",
  "docker::build-server",
  "docker::build-image"
]

[tasks.build-container-release]
description = "Build a release Docker container, including the server and web-client dependencies."
category = "Build"
workspace = false
dependencies = [
  "wasm-release",
  "wasm-opt",
  "docker::build-server",
  "docker::build-image-release"
]

[tasks."docker::build-server"]
private = true
workspace = false
command = "docker"
args = [
  "run",
  "--rm",
  "--volume", "cargo-cache:/root/.cargo/registry",
  "--volume", "${CARGO_MAKE_WORKING_DIRECTORY}:/volume",
  "clux/muslrust:nightly",
  "cargo", "build", "--bin", "automaat-server", "--release",
]

[tasks."docker::build-image"]
private = true
workspace = false
command = "docker"
args = ["build", "--tag", "${CONTAINER_DEVELOP_IMG}", "${CARGO_MAKE_WORKING_DIRECTORY}"]

[tasks."docker::build-image-release"]
private = true
workspace = false
command = "docker"
args = ["build", "--tag", "${CONTAINER_RELEASE_IMG}", "${CARGO_MAKE_WORKING_DIRECTORY}"]
